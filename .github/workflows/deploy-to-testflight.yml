name: Deploy to TestFlight

on:
  push:
    branches:
      - develop
      - beta
      - release
    
jobs:
  deploy-to-testflight:
    runs-on: macos-11.0
    
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache bundler gems
        uses: actions/cache@v2
        with:
          path: ./vendor
          key: ${{ hashFiles('Gemfile.lock') }}

      - name: Install bundler dependencies
        run: bundle install
        
      - name: Create secrets to pass some ENV to the build
        env:
          APP_STORE_CONNECT_TEAM_ID: ${{ secrets.APP_STORE_CONNECT_TEAM_ID }}
          APPLE_MUSIC_PRIVATE_KEY: ${{ secrets.APPLE_MUSIC_PRIVATE_KEY }}
          APPLE_MUSIC_KEY_ID: ${{ secrets.APPLE_MUSIC_KEY_ID }}
        run: |
          exec: .github/scripts/create-secrets.sh
        
      - name: Import signing certificate
        env:
          APP_STORE_SIGNING_CERTIFICATE: ${{ secrets.APP_STORE_SIGNING_CERTIFICATE }}
          APP_STORE_SIGNING_CERTIFICATE_PASSWORD: ${{ secrets.APP_STORE_SIGNING_CERTIFICATE_PASSWORD }}
        run: |
          exec .github/scripts/import-certificate.sh
          
      - name: Import provisioning profiles
        env:
          PROVISIONING_PROFILE_ALPHA: ${{ secrets.PROVISIONING_PROFILE_ALPHA }}
          PROVISIONING_PROFILE_BETA: ${{ secrets.PROVISIONING_PROFILE_BETA }}
          PROVISIONING_PROFILE_RELEASE: ${{ secrets.PROVISIONING_PROFILE_RELEASE }}
        run: |
          exec .github/scripts/import-profile.sh
          
      - name: Build and deploy
        env:
          APPLE_TEAM_ID: ${{ secrets.APP_STORE_CONNECT_TEAM_ID }}
          APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}
          APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY }}
        run: |
          exec ./build.sh
